import requests

from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram import F,Router
from aiogram.filters import CommandStart
from aiogram.types import Message
from start_name import API_KEY
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

router = Router()

class Weather(StatesGroup):
    weather = State()

main = ReplyKeyboardMarkup(resize_keyboard=True,keyboard=[[KeyboardButton(text='–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—Éüåç')]])


@router.message(CommandStart())
async def start(message: Message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç, –Ø –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –ø–æ–º–æ–∂–µ—Ç —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ!',reply_markup=main)

@router.message(F.text == '–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—Éüåç')
async def weather_city(message: Message, state: FSMContext):
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É üåç:')
    await state.set_state(Weather.weather)

@router.message(Weather.weather)
async def weather(message: Message, state: FSMContext):
    city = message.text
    try:
        red = requests.get(f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={API_KEY}&units=metric&lang=ru')
        data = red.json()
        if data.get('cod') != 200:
            await message.answer("‚ö†Ô∏è –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
            return
        temp = data['main']['temp']
        feels_like = data['main']['feels_like']
        desc = data['weather'][0]['description']
        wind = data['wind']['speed']
        humidity = data['main']['humidity']
        await message.answer(
            f"üìç –ü–æ–≥–æ–¥–∞ –≤ <b>{city.title()}</b>:\n"
            f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like}¬∞C)\n"
            f"‚òÅ {desc.capitalize()}\n"
            f"üí® –í–µ—Ç–µ—Ä: {wind} –º/—Å\n"
            f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%",
            parse_mode="HTML",reply_markup=main
        )
    except Exception as e:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        print(f"–û—à–∏–±–∫–∞ –ø–æ–≥–æ–¥—ã: {e}")
    await state.set_state(Weather.weather)

